[{"/Users/zeeshan/Work/ecommerce-xyz/src/index.tsx":"1","/Users/zeeshan/Work/ecommerce-xyz/src/reportWebVitals.ts":"2","/Users/zeeshan/Work/ecommerce-xyz/src/App.tsx":"3","/Users/zeeshan/Work/ecommerce-xyz/src/Components/CartProvider/index.tsx":"4","/Users/zeeshan/Work/ecommerce-xyz/src/Components/FeedProvider/index.tsx":"5","/Users/zeeshan/Work/ecommerce-xyz/src/Components/AuthProvider/index.tsx":"6","/Users/zeeshan/Work/ecommerce-xyz/src/Components/LocaleProvider/index.tsx":"7","/Users/zeeshan/Work/ecommerce-xyz/src/Components/TextProvider/index.tsx":"8","/Users/zeeshan/Work/ecommerce-xyz/src/Components/LanguageProvider/index.tsx":"9","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/Routes/index.tsx":"10","/Users/zeeshan/Work/ecommerce-xyz/src/Components/TextProvider/spanish.ts":"11","/Users/zeeshan/Work/ecommerce-xyz/src/Components/TextProvider/hindi.ts":"12","/Users/zeeshan/Work/ecommerce-xyz/src/Components/TextProvider/english.ts":"13","/Users/zeeshan/Work/ecommerce-xyz/src/Components/TextProvider/french.ts":"14","/Users/zeeshan/Work/ecommerce-xyz/src/Utils/pouch.db.functions.ts":"15","/Users/zeeshan/Work/ecommerce-xyz/src/Utils/firebase.ts":"16","/Users/zeeshan/Work/ecommerce-xyz/src/Utils/fetchLocale.ts":"17","/Users/zeeshan/Work/ecommerce-xyz/src/Utils/axios.client.ts":"18","/Users/zeeshan/Work/ecommerce-xyz/src/Utils/deferred.ts":"19","/Users/zeeshan/Work/ecommerce-xyz/src/Components/Header/index.tsx":"20","/Users/zeeshan/Work/ecommerce-xyz/src/Components/Footer/index.tsx":"21","/Users/zeeshan/Work/ecommerce-xyz/src/Components/PrivateRoute/index.tsx":"22","/Users/zeeshan/Work/ecommerce-xyz/src/Components/LanguageEnforcer/index.tsx":"23","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/LanguageSelection/index.tsx":"24","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/AuthPage/index.tsx":"25","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/HomePage/index.tsx":"26","/Users/zeeshan/Work/ecommerce-xyz/src/Components/ScrollToTop/index.tsx":"27","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/NotificationPage/index.tsx":"28","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/NotFoundPage/index.tsx":"29","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/RewardsPage/index.tsx":"30","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/CartPage/index.tsx":"31","/Users/zeeshan/Work/ecommerce-xyz/src/Components/CostBreakUp/index.tsx":"32","/Users/zeeshan/Work/ecommerce-xyz/src/Components/CartPageRow/index.tsx":"33","/Users/zeeshan/Work/ecommerce-xyz/src/Components/ScratchComponent/index.tsx":"34","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/FeedPage/index.tsx":"35","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/ProductDescriptionPage/index.tsx":"36","/Users/zeeshan/Work/ecommerce-xyz/src/Components/SignUpForm/index.tsx":"37","/Users/zeeshan/Work/ecommerce-xyz/src/Components/ForgotPasswordForm/index.tsx":"38","/Users/zeeshan/Work/ecommerce-xyz/src/Components/LoginForm/index.tsx":"39","/Users/zeeshan/Work/ecommerce-xyz/src/Components/CartAvatarComponent/index.tsx":"40","/Users/zeeshan/Work/ecommerce-xyz/src/Components/UserAvatar/index.tsx":"41","/Users/zeeshan/Work/ecommerce-xyz/src/Components/LanguagePicker/index.tsx":"42","/Users/zeeshan/Work/ecommerce-xyz/src/Utils/fuse.service.ts":"43","/Users/zeeshan/Work/ecommerce-xyz/src/Utils/product.language.ts":"44","/Users/zeeshan/Work/ecommerce-xyz/src/Utils/checkEmail.ts":"45","/Users/zeeshan/Work/ecommerce-xyz/src/Utils/capitalize.ts":"46","/Users/zeeshan/Work/ecommerce-xyz/src/Components/useComponentVisible/index.tsx":"47","/Users/zeeshan/Work/ecommerce-xyz/src/Components/GoogleSignIn/index.tsx":"48","/Users/zeeshan/Work/ecommerce-xyz/src/Components/LanguagePickerListItem/index.tsx":"49","/Users/zeeshan/Work/ecommerce-xyz/src/Components/ProductCard/index.tsx":"50","/Users/zeeshan/Work/ecommerce-xyz/src/Components/NewScratchCard/index.tsx":"51","/Users/zeeshan/Work/ecommerce-xyz/src/Components/QuantiyForm/index.tsx":"52","/Users/zeeshan/Work/ecommerce-xyz/src/Components/PeriodicNotification/index.tsx":"53"},{"size":691,"mtime":1612130205587,"results":"54","hashOfConfig":"55"},{"size":425,"mtime":1611920637997,"results":"56","hashOfConfig":"55"},{"size":955,"mtime":1612374286610,"results":"57","hashOfConfig":"55"},{"size":6088,"mtime":1612355815518,"results":"58","hashOfConfig":"55"},{"size":1808,"mtime":1612373747614,"results":"59","hashOfConfig":"55"},{"size":2353,"mtime":1612435227021,"results":"60","hashOfConfig":"55"},{"size":2886,"mtime":1612350559287,"results":"61","hashOfConfig":"55"},{"size":1012,"mtime":1612350723250,"results":"62","hashOfConfig":"55"},{"size":3268,"mtime":1612211812473,"results":"63","hashOfConfig":"55"},{"size":2494,"mtime":1612381563940,"results":"64","hashOfConfig":"55"},{"size":4100,"mtime":1612398099309,"results":"65","hashOfConfig":"55"},{"size":5837,"mtime":1612398107059,"results":"66","hashOfConfig":"55"},{"size":3488,"mtime":1612397670625,"results":"67","hashOfConfig":"55"},{"size":3959,"mtime":1612398089188,"results":"68","hashOfConfig":"55"},{"size":806,"mtime":1612258348464,"results":"69","hashOfConfig":"55"},{"size":1501,"mtime":1612342456809,"results":"70","hashOfConfig":"55"},{"size":1185,"mtime":1612209276051,"results":"71","hashOfConfig":"55"},{"size":95,"mtime":1612165812425,"results":"72","hashOfConfig":"55"},{"size":303,"mtime":1612097638889,"results":"73","hashOfConfig":"55"},{"size":1153,"mtime":1612385624802,"results":"74","hashOfConfig":"55"},{"size":969,"mtime":1612381588001,"results":"75","hashOfConfig":"55"},{"size":545,"mtime":1612385658384,"results":"76","hashOfConfig":"55"},{"size":525,"mtime":1612089612598,"results":"77","hashOfConfig":"55"},{"size":865,"mtime":1612378590285,"results":"78","hashOfConfig":"55"},{"size":1366,"mtime":1612378634538,"results":"79","hashOfConfig":"55"},{"size":631,"mtime":1612378622613,"results":"80","hashOfConfig":"55"},{"size":360,"mtime":1612053894725,"results":"81","hashOfConfig":"55"},{"size":2793,"mtime":1612398385538,"results":"82","hashOfConfig":"55"},{"size":329,"mtime":1612381902821,"results":"83","hashOfConfig":"55"},{"size":814,"mtime":1612404981622,"results":"84","hashOfConfig":"55"},{"size":1924,"mtime":1612379258885,"results":"85","hashOfConfig":"55"},{"size":1993,"mtime":1612372200144,"results":"86","hashOfConfig":"55"},{"size":3352,"mtime":1612373615702,"results":"87","hashOfConfig":"55"},{"size":1905,"mtime":1612380163229,"results":"88","hashOfConfig":"55"},{"size":1241,"mtime":1612293194570,"results":"89","hashOfConfig":"55"},{"size":2808,"mtime":1612356471587,"results":"90","hashOfConfig":"55"},{"size":5400,"mtime":1612404236913,"results":"91","hashOfConfig":"55"},{"size":2914,"mtime":1612373772592,"results":"92","hashOfConfig":"55"},{"size":4432,"mtime":1612404222557,"results":"93","hashOfConfig":"55"},{"size":1173,"mtime":1612373594049,"results":"94","hashOfConfig":"55"},{"size":1205,"mtime":1612353987326,"results":"95","hashOfConfig":"55"},{"size":4348,"mtime":1612372774042,"results":"96","hashOfConfig":"55"},{"size":771,"mtime":1612001695901,"results":"97","hashOfConfig":"55"},{"size":300,"mtime":1612292881843,"results":"98","hashOfConfig":"55"},{"size":244,"mtime":1612048731865,"results":"99","hashOfConfig":"55"},{"size":171,"mtime":1612278143892,"results":"100","hashOfConfig":"55"},{"size":732,"mtime":1612000806347,"results":"101","hashOfConfig":"55"},{"size":2009,"mtime":1612351767075,"results":"102","hashOfConfig":"55"},{"size":695,"mtime":1612036857268,"results":"103","hashOfConfig":"55"},{"size":2963,"mtime":1612296270991,"results":"104","hashOfConfig":"55"},{"size":5843,"mtime":1612371238122,"results":"105","hashOfConfig":"55"},{"size":1682,"mtime":1612351099937,"results":"106","hashOfConfig":"55"},{"size":3664,"mtime":1612436798814,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"15ms50y",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"110"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"110"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"110"},"/Users/zeeshan/Work/ecommerce-xyz/src/index.tsx",[],["240","241"],"/Users/zeeshan/Work/ecommerce-xyz/src/reportWebVitals.ts",[],"/Users/zeeshan/Work/ecommerce-xyz/src/App.tsx",["242"],"import { Box, ChakraProvider } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport AuthProvider from \"./Components/AuthProvider\";\nimport CartProvider from \"./Components/CartProvider\";\nimport FeedProvider from \"./Components/FeedProvider\";\nimport LanguageProvider from \"./Components/LanguageProvider\";\nimport LocaleProvider from \"./Components/LocaleProvider\";\nimport TextProvider from \"./Components/TextProvider\";\nimport Routes from \"./Pages/Routes\";\n\n\nconst App = () => {\n  return (\n    <ChakraProvider resetCSS>\n        <LanguageProvider>\n          <LocaleProvider>\n            <FeedProvider>\n              <TextProvider>\n                <CartProvider>\n                  <AuthProvider>\n                    <Routes />\n                  </AuthProvider>\n                </CartProvider>\n              </TextProvider>\n            </FeedProvider>\n          </LocaleProvider>\n        </LanguageProvider>\n    </ChakraProvider>\n  );\n};\n\nexport default App;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Components/CartProvider/index.tsx",["243","244","245","246","247","248"],"import { Center, Spinner, useToast } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { fetchData, saveData } from \"../../Utils/pouch.db.functions\";\nimport { Product } from \"../FeedProvider\";\nimport { LocaleContext } from \"../LocaleProvider\";\nimport { TextContext } from \"../TextProvider\";\n\nexport interface CartItemsModel {\n  quantity: number;\n  product: Product;\n}\n\ninterface CartModel {\n  items: CartItemsModel[];\n  CartQuantity: number;\n  CartTotal: string;\n  addToCart: (product: Product, quantity: number, index: number) => void;\n  removeFromCart: (product: Product, index: number, all?: boolean) => void;\n  clearCart: () => void;\n}\n\nconst initialState: CartModel = {\n  items: [],\n  CartQuantity: 0,\n  CartTotal: \"\",\n  addToCart: (product: Product, quantity: number, index: number) => {},\n  removeFromCart: (product: Product, index: number, all?: boolean) => {},\n  clearCart: () => {},\n};\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const CartContext = React.createContext({ ...initialState });\n\nconst CartProvider = ({ children }: Props) => {\n  const [CartItems, setCartItems] = React.useState<CartItemsModel[]>([]);\n  const [CartQuantity, setCartQuantity] = React.useState<number>(0);\n  const [CartTotal, setCartTotal] = React.useState<string>(\"\");\n  const [loading, setLoading] = React.useState<boolean>(true);\n  const { exchangeRate } = React.useContext(LocaleContext);\n  const text = React.useContext(TextContext);\n\n  const toast = useToast();\n\n  React.useEffect(() => {\n    const { quantity } = CartItems.reduce(\n      (total, item) => {\n        return {\n          product: item.product,\n          quantity: total.quantity + item.quantity,\n        };\n      },\n      { product: {}, quantity: 0 }\n    );\n\n    const total = CartItems.map((item) => {\n      const price = item.product.price * exchangeRate;\n      return price * quantity;\n    }).reduce((sum, curr) => {\n      return sum + curr;\n    }, 0);\n\n    setCartTotal(total.toFixed(2));\n    setCartQuantity(quantity);\n    console.log(\"called\");\n    saveData({\n      _id: \"cart\",\n      CartItems,\n    });\n  }, [CartItems]);\n\n  // React.useEffect(() => {\n\n  // }, [CartQuantity]);\n\n  const init = async () => {\n    try {\n      const data = await fetchData(\"cart\");\n      setCartItems((data as any).CartItems as CartItemsModel[]);\n    } catch (err) {\n      console.error({ err });\n    } finally {\n      setLoading(false);\n    }\n  };\n  React.useEffect(() => {\n    init();\n  }, []);\n\n  const addToCart = (product: Product, quantity: number, index: number) => {\n    if (CartQuantity + quantity > 50) {\n      toast({\n        title: text.CartProvider.toastError2.title,\n        description: text.CartProvider.toastError2.description,\n        status: \"error\",\n        duration: 2000,\n        isClosable: true,\n      });\n    } else {\n      const exists = CartItems.filter((item) => item.product.id === product.id);\n      if (exists.length > 0) {\n        //Item Exists\n        let error = false;\n        const newState = CartItems.map((item) => {\n          if (product.id === item.product.id) {\n            const newItem = { ...item };\n            if (newItem.quantity + quantity > 20) {\n              const newQ = 20 - newItem.quantity;\n              error = true;\n              toast({\n                title: text.CartProvider.toastError1.title,\n                description: text.CartProvider.toastError1.description.replace(\n                  \"${{}}\",\n                  newQ.toString()\n                ),\n                status: \"error\",\n                duration: 2000,\n                isClosable: true,\n              });\n              newItem.quantity = 20;\n            } else {\n              newItem.quantity = newItem.quantity + quantity;\n            }\n            return newItem;\n          } else {\n            return item;\n          }\n        });\n\n        setCartItems(newState);\n        if (!error) {\n          toast({\n            title: text.CartProvider.toastSuccess.title.replace(\n              \"${{}}\",\n              quantity.toString()\n            ),\n            status: \"success\",\n            duration: 1000,\n            isClosable: true,\n          });\n        }\n      } else {\n        //Item Doesn't exist in cart\n        const newState = [...CartItems, { product, quantity }];\n        setCartItems(newState);\n        toast({\n          title: text.CartProvider.toastSuccess.title.replace(\n            \"${{}}\",\n            quantity.toString()\n          ),\n          status: \"success\",\n          duration: 1000,\n          isClosable: true,\n        });\n      }\n    }\n  };\n\n  const removeFromCart = (product: Product, index: number, all?: boolean) => {\n    const item = CartItems[index];\n    const newCart = [...CartItems];\n    if (item) {\n      if (all) {\n        newCart.splice(index, 1);\n      } else {\n        if (item.quantity - 1 === 0) {\n          newCart.splice(index, 1);\n          toast({\n            title: text.CartProvider.toastRemoveSuccess.title.replace(\n              \"${{}}\",\n              \"\"\n            ),\n            status: \"success\",\n            duration: 1000,\n            isClosable: true,\n          });\n        } else {\n          newCart[index].quantity = item.quantity - 1;\n          toast({\n            title: text.CartProvider.toastRemoveSuccess.title.replace(\n              \"${{}}\",\n              \"1\"\n            ),\n            status: \"success\",\n            duration: 1000,\n            isClosable: true,\n          });\n        }\n      }\n\n      setCartItems(newCart);\n    }\n  };\n\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        items: CartItems,\n        CartQuantity,\n        CartTotal,\n        addToCart,\n        removeFromCart,\n        clearCart,\n      }}\n    >\n      {loading ? (\n        <Center height=\"100vh\">\n          <Spinner\n            thickness=\"5px\"\n            speed=\"0.65s\"\n            emptyColor=\"gray.900\"\n            color=\"white\"\n            size=\"xl\"\n          />\n        </Center>\n      ) : (\n        children\n      )}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Components/FeedProvider/index.tsx",["249"],"import { Center, Spinner } from \"@chakra-ui/react\";\nimport React, { useEffect } from \"react\";\nimport { DB } from \"../../Utils/firebase\";\nimport { LanguageContext } from \"../LanguageProvider\";\n\nexport interface Product {\n  description_spanish: string;\n  image: string;\n  description: string;\n  category_french: string;\n  title_hindi: string;\n  title: string;\n  description_french: string;\n  description_hindi: string;\n  title_french: string;\n  price: number;\n  category_spanish: string;\n  id: number;\n  category: string;\n  category_hindi: string;\n  title_spanish: string;\n}\n\ninterface FeedContextInitialState {\n  homePageFeed: Product[];\n}\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst initialState: FeedContextInitialState = {\n  homePageFeed: [],\n};\n\nexport const FeedContext = React.createContext(initialState);\n\nconst FeedProvider = ({ children }: Props) => {\n  const [homePageFeed, setHomepageFeed] = React.useState<Product[]>([]);\n\n  const [loading, setLoading] = React.useState<boolean>(true);\n\n  const init = async () => {\n    try {\n      const five = await DB.collection(`Items_english`).orderBy(\"id\").get();\n      const data = five.docs.map((ob) => ob.data());\n      console.log({ data });\n      setHomepageFeed(data as Product[]);\n      setLoading(false);\n    } catch (err) {\n      console.log({ err });\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  return (\n    <FeedContext.Provider value={{ homePageFeed }}>\n      {loading ? (\n        <Center height=\"100vh\">\n          <Spinner\n            thickness=\"5px\"\n            speed=\"0.65s\"\n            emptyColor=\"gray.900\"\n            color=\"white\"\n            size=\"xl\"\n          />\n        </Center>\n      ) : (\n        children\n      )}\n    </FeedContext.Provider>\n  );\n};\n\nexport default FeedProvider;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Components/AuthProvider/index.tsx",["250"],"import React, { useEffect, useState } from \"react\";\nimport { Auth, DB, initMessaging, Messaging } from \"../../Utils/firebase\";\nimport firebase from \"firebase\";\nimport { Center, Spinner, useToast } from \"@chakra-ui/react\";\nimport { LanguageContext } from \"../LanguageProvider\";\n\ninterface AuthContextProps {\n  fcmToken: string;\n  user: firebase.User | null;\n}\n\nconst initialState: AuthContextProps = {\n  fcmToken: \"\",\n  user: null,\n};\n\nexport const AuthContext = React.createContext(initialState);\n\nconst AuthProvider = (props: { children: any }) => {\n  const [currentUser, setCurrentUser] = useState<null | firebase.User>(null);\n  const [fcmToken, setFcmToken] = useState<string>(\"\");\n  const { label } = React.useContext(LanguageContext);\n  const [loading, setLoading] = useState<boolean>(true);\n  const toast = useToast();\n\n  useEffect(() => {\n    const code =\n      label.toLowerCase().indexOf(\"spa\") > -1\n        ? \"es\"\n        : label.toLowerCase().substring(0, 2);\n    Auth.languageCode = code;\n    console.log({ Auth });\n  }, [label]);\n\n  useEffect(() => {\n    const listenerStop = Auth.onAuthStateChanged((user) => {\n      console.log({ user });\n      if (user) {\n        initMessaging()\n          .then((token) => {\n            if (token) {\n              setFcmToken(token);\n            }\n            DB.collection(\"users\").doc(user?.uid).set({ token });\n            // console.log({ token });\n          })\n          .catch((err) => {\n            console.log({ err });\n          });\n      }\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    Messaging.onMessage((payload) => {\n      console.log(\"Message received. \", payload);\n      toast({\n        position: \"top-right\",\n        duration: 3000,\n        title: payload.notification?.title,\n        description: payload.notification?.body,\n        isClosable: true,\n      });\n      // ...\n    });\n    return () => {\n      listenerStop();\n    };\n  }, []);\n  return (\n    <AuthContext.Provider value={{ user: currentUser, fcmToken }}>\n      {loading ? (\n        <Center height=\"100vh\">\n          <Spinner\n            thickness=\"5px\"\n            speed=\"0.65s\"\n            emptyColor=\"gray.900\"\n            color=\"white\"\n            size=\"xl\"\n          />\n        </Center>\n      ) : (\n        props.children\n      )}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Components/LocaleProvider/index.tsx",["251"],"import { Center, Spinner } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport getSymbolFromCurrency from \"currency-symbol-map\";\n\nimport {\n  fetchExchangeRates,\n  fetchIP,\n  fetchOthers,\n} from \"../../Utils/fetchLocale\";\nimport { fetchData, saveData } from \"../../Utils/pouch.db.functions\";\n\ninterface LocaleStateModel {\n  currency: string;\n  currencySymbol: string;\n  country: string;\n  exchangeRate: number;\n}\n\nconst initialState: LocaleStateModel = {\n  currency: \"\",\n  currencySymbol: \"\",\n  country: \"\",\n  exchangeRate: 1,\n};\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const LocaleContext = React.createContext(initialState);\n\nconst LocaleProvider = ({ children }: Props) => {\n  const [LocaleState, setLocaleState] = React.useState<LocaleStateModel>(\n    initialState\n  );\n\n  const [Loading, setLoading] = React.useState<boolean>(true);\n\n  const fetchLocale = async () => {\n    try {\n      const ip = await fetchIP();\n      const others = await fetchOthers(ip);\n      const exchangeRate = await fetchExchangeRates(others.currency);\n      //   console.log({ others });\n\n      const symbol = getSymbolFromCurrency(others.currency);\n\n      setLocaleState({\n        currencySymbol: symbol!,\n        currency: others.currency,\n        country: others.country,\n        exchangeRate: exchangeRate,\n      });\n\n      saveData({\n        _id: \"locale\",\n        currencySymbol: symbol!,\n        currency: others.currency,\n        country: others.country,\n        exchangeRate: exchangeRate,\n      });\n\n      setLoading(false);\n    } catch (err) {\n      console.log({ err });\n      setLocaleState({\n        currencySymbol: \"$\",\n        currency: \"USD\",\n        country: \"USA\",\n        exchangeRate: 1,\n      });\n      saveData({\n        _id: \"locale\",\n        currencySymbol: \"$\",\n        currency: \"USD\",\n        country: \"USA\",\n        exchangeRate: 1,\n      });\n      setLoading(false);\n    }\n  };\n\n  const init = async () => {\n    try {\n      const initialS = await fetchData(\"locale\");\n      setLocaleState({\n        country: ((initialS as unknown) as LocaleStateModel).country,\n        currency: ((initialS as unknown) as LocaleStateModel).currency,\n        currencySymbol: ((initialS as unknown) as LocaleStateModel)\n          .currencySymbol,\n        exchangeRate: ((initialS as unknown) as LocaleStateModel).exchangeRate,\n      });\n\n      setLoading(false);\n    } catch (err) {\n      fetchLocale();\n    }\n  };\n\n  React.useEffect(() => {\n    init();\n  }, []);\n\n  return (\n    <LocaleContext.Provider value={LocaleState}>\n      {Loading ? (\n        <Center height=\"100vh\">\n          <Spinner\n            thickness=\"5px\"\n            speed=\"0.65s\"\n            emptyColor=\"gray.900\"\n            color=\"white\"\n            size=\"xl\"\n          />\n        </Center>\n      ) : (\n        children\n      )}\n    </LocaleContext.Provider>\n  );\n};\n\nexport default LocaleProvider;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Components/TextProvider/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/LanguageProvider/index.tsx",["252"],"import React, { useEffect, useState } from \"react\";\nimport { Center, Spinner } from \"@chakra-ui/react\";\nimport { Item } from \"../LanguagePicker\";\nimport { fetchData, saveData } from \"../../Utils/pouch.db.functions\";\n\ninterface LanguageContextProps {\n  id: number;\n  label: string;\n  translation: string;\n  setCurrentLanguage: (item: Item) => void;\n}\n\nexport const LanguageContext = React.createContext<LanguageContextProps>({\n  id: -1,\n  label: \"\",\n  translation: \"\",\n  setCurrentLanguage: (item: Item) => {},\n});\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst LanguageProvider = (props: Props) => {\n  //   const history = useHistory();\n  const [currentLanguage, setCurrentLanguage] = useState<Item>({\n    id: -1,\n    label: \"\",\n    translation: \"\",\n  });\n\n  const [loading, setLoading] = useState<boolean>(true);\n\n  // const saveCookie = (cname: string, cvalue: string) => {\n  //   let d = new Date();\n  //   d.setTime(d.getTime() + 999 * 24 * 60 * 60 * 1000);\n  //   const expires = \"expires=\" + d.toUTCString();\n  //   document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n  // };\n\n  // const getCookie = (cname: string) => {\n  //   const name = cname + \"=\";\n  //   const decodedCookie = decodeURIComponent(document.cookie);\n  //   const ca = decodedCookie.split(\";\");\n\n  //   for (var i = 0; i < ca.length; i++) {\n  //     var c = ca[i];\n  //     while (c.charAt(0) === \" \") {\n  //       c = c.substring(1);\n  //     }\n  //     if (c.indexOf(name) === 0) {\n  //       return c.substring(name.length, c.length);\n  //     }\n  //   }\n  //   return \"\";\n  // };\n\n  const init = async () => {\n    try {\n      const initData = await fetchData(\"language\");\n      setCurrentLanguage({\n        id: (initData as any).id,\n        translation: (initData as any).translation,\n        label: (initData as any).label,\n      });\n\n      setLoading(false);\n    } catch (err) {\n      saveData({\n        _id: \"language\",\n        id: currentLanguage.id,\n        label: currentLanguage.label,\n        translation: currentLanguage.translation,\n      });\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    init();\n    // const data = getCookie(\"languagePreference\");\n    // if (data !== \"\") {\n    //   const ob = JSON.parse(data);\n    //   setCurrentLanguage(ob);\n    //   console.log({ ob });\n    // } else {\n    //   setLoading(false);\n    // }\n  }, []);\n\n  useEffect(() => {\n    if (currentLanguage.id !== -1) {\n      console.log(\"Provider currentLanguage changed\");\n      // console.log(JSON.stringify(currentLanguage));\n      saveData({\n        _id: \"language\",\n        ...currentLanguage,\n      });\n      // saveCookie(\"languagePreference\", JSON.stringify(currentLanguage));\n      // console.log(getCookie(\"languagePreference\"));\n      // setLoading(false);\n    }\n  }, [currentLanguage]);\n\n  return (\n    <LanguageContext.Provider\n      value={{ ...currentLanguage, setCurrentLanguage }}\n    >\n      {loading ? (\n        <Center height=\"100vh\">\n          <Spinner\n            thickness=\"5px\"\n            speed=\"0.65s\"\n            emptyColor=\"gray.900\"\n            color=\"white\"\n            size=\"xl\"\n          />\n        </Center>\n      ) : (\n        props.children\n      )}\n    </LanguageContext.Provider>\n  );\n};\n\nexport default LanguageProvider;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/Routes/index.tsx",["253","254","255"],"import { Box, Flex, Grid, Heading, useColorMode } from \"@chakra-ui/react\";\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Footer from \"../../Components/Footer\";\nimport Header from \"../../Components/Header\";\nimport LanguageEnforcedRoute from \"../../Components/LanguageEnforcer\";\nimport PrivateRoute from \"../../Components/PrivateRoute\";\nimport ScrollToTop from \"../../Components/ScrollToTop\";\nimport AuthPage from \"../AuthPage\";\nimport CartPage from \"../CartPage\";\nimport HomePage from \"../HomePage\";\nimport LanguageSelection from \"../LanguageSelection\";\nimport NotFoundPage from \"../NotFoundPage\";\nimport NotificationPage from \"../NotificationPage\";\nimport RewardsPage from \"../RewardsPage\";\n\nconst Routes = () => {\n  const { colorMode, toggleColorMode } = useColorMode();\n  useEffect(() => {\n    if (colorMode === \"light\") {\n      toggleColorMode();\n    }\n    // console.log({ colorMode });\n  }, []);\n  return (\n    <Router>\n      <ScrollToTop />\n      <Grid height=\"100vh\" templateRows=\"5em auto\">\n        <Header />\n        <Flex\n          direction=\"column\"\n          backgroundColor=\"gray.700\"\n          // height=\"100%\"\n          overflowY=\"auto\"\n          justifyContent=\"space-between\"\n        >\n          <div id=\"scroller\" />\n          {/* <Box> */}\n          <Switch>\n            <Route exact path=\"/\">\n              <LanguageSelection start />\n            </Route>\n\n            <LanguageEnforcedRoute path=\"/home\">\n              <HomePage />\n            </LanguageEnforcedRoute>\n\n            <LanguageEnforcedRoute path=\"/auth\">\n              <AuthPage />\n            </LanguageEnforcedRoute>\n\n            <LanguageEnforcedRoute path=\"/cart\">\n              <CartPage />\n            </LanguageEnforcedRoute>\n\n            <Route path=\"/change-language\">\n              <LanguageSelection />\n            </Route>\n\n            <LanguageEnforcedRoute path=\"/rewards\">\n              <PrivateRoute>\n                <RewardsPage />\n              </PrivateRoute>\n            </LanguageEnforcedRoute>\n\n            <LanguageEnforcedRoute path=\"/notification\">\n              <PrivateRoute>\n                <NotificationPage />\n              </PrivateRoute>\n            </LanguageEnforcedRoute>\n\n            <Route path=\"*\">\n              <NotFoundPage />\n            </Route>\n          </Switch>\n          {/* </Box> */}\n          <Footer />\n        </Flex>\n      </Grid>\n    </Router>\n  );\n};\n\nexport default Routes;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Components/TextProvider/spanish.ts",["256","257","258","259"],"const spanish = {\n  LanguagePicker: {\n    inputPlaceHolder: \"Seleccione el idioma\",\n    Heading: \"Elige tu idioma\",\n    inputAddon: \"Idioma\",\n    button: \"Continuar\",\n  },\n  QuantityForm: {\n    buttonText: \"Añadir al carrito\",\n    selectLabel: \"Cantidad\",\n  },\n  ProductDescriptionPage: {\n    descriptionHeader: \"Acerca de este artículo\",\n    buttonText: \"Añadir al carrito\",\n    category: \"En categoría\",\n  },\n  AuthPage: {\n    tagLine: \"¡Para comprar fácilmente!\",\n  },\n  LoginForm: {\n    emailLabel: \"Email\",\n    emailPlaceholder: \"Ingrese correo electrónico\",\n    passwordLabel: \"Contraseña\",\n    passwordPlaceholder: \"Introducir la contraseña\",\n    loginButtonText: \"Iniciar sesión\",\n    forgotPassword: \"Has olvidado tu contraseña\",\n    signupButtonText: \"Contratar\",\n    googleSignIn: \"Registrarse\",\n    userNotFound: \"Usuario no encontrado\",\n    invalidPassword: \"Contraseña invalida\",\n    noEmail: \"¡Correo electronico es requerido!\",\n    validateEmail:\n      \"¡Por favor introduzca una dirección de correo electrónico válida!\",\n    noPassword: \"¡Se requiere contraseña!\",\n  },\n  ForgotPasswordForm: {\n    emailLabel: \"Email\",\n    emailPlaceholder: \"Ingrese correo electrónico\",\n    emailErrorNotFound: \"Usuario no encontrado\",\n    emailSuccess:\n      \"Se ha enviado un enlace para restablecer la contraseña a su correo\",\n    submitButton: \"Restablecer la contraseña\",\n  },\n  SignUpForm: {\n    noEmail: \"¡Correo electronico es requerido!\",\n    validateEmail:\n      \"¡Por favor introduzca una dirección de correo electrónico válida!\",\n    noPassword: \"¡Se requiere contraseña!\",\n    validatePassword: \"La contraseña debe tener al menos 6 caracteres\",\n    noName: \"Se requiere el nombre\",\n    namePlaceholder: \"Ingrese su nombre\",\n    emailPlaceholder: \"Ingrese correo electrónico\",\n    passwordPlaceholder: \"Introducir la contraseña\",\n    nameLabel: \"Nombre\",\n    emailLabel: \"Email\",\n    passwordLabel: \"Contraseña\",\n    passwordButtonTextShow: \"Mostrar\",\n    passwordButtonTextHide: \"Esconder\",\n    signupButtonText: \"Contratar\",\n    loginButtonText: \"Iniciar sesión\",\n  },\n  CartPage: {\n    noItems: \"¡No hay artículos!\",\n  },\n  CostBreakUp: {\n    breakupHeading: \"Desglose de costos\",\n    totalHeading: \"Total\",\n    buyText: \"Comprar\",\n  },\n  RewardsPage: {\n    message: \"¡Gracias por comprar! ¡Rasca abajo para ver tu recompensa!\",\n  },\n  ScratchComponent: {\n    nextTime: \"¡Mejor suerte la próxima vez!\",\n    winMessage: \"Has ganado ${{}}\",\n    resetButton: \"Reiniciar\",\n  },\n\n  CartProvider: {\n    toastError1: {\n      title: \"Límite de artículos alcanzado\",\n      description:\n        \"${{}} elementos agregados. No puede agregar más de este elemento\",\n    },\n    toastError2: {\n      title: \"Límite de carrito alcanzado\",\n      description:\n        \"¡No puede agregar más artículos al carrito! ¡Por favor, pague o borre el carrito!\",\n    },\n    toastSuccess: {\n      title: \"${{}} agregados al carrito\",\n    },\n    toastRemoveSuccess: {\n      title: \"${{}} Artículo eliminado del carrito\",\n    },\n  },\n  Footer: {\n    changeLanguage: \"Cambiar idioma\",\n    login: \"Iniciar sesión\",\n    signup: \"Contratar\",\n    notification: \"Prueba de notificación\",\n  },\n  UserAvatar: {\n    changeLanguage: \"Cambiar idioma\",\n    signOut: \"Desconectar\",\n  },\n  NotFound: {\n    text: \"Página no encontrada\",\n  },\n  NotificationPage: {\n    title: \"Título de la notificación\",\n    titlePlaceholder: \"Ingrese el título de la notificación\",\n    noTitle: \"¡Se requiere título!\",\n    body: \"Cuerpo de notificación\",\n    bodyPlaceholder: \"Ingrese el cuerpo de notificación\",\n    noBody: \"¡Se requiere el cuerpo de notificación!\",\n    longBody: \"El cuerpo de notificación es demasiado largo\",\n    delay: \"Retraso de notificación\",\n    submit: \"Enviar notificación\"\n  },\n  PeriodicNotification: {\n    title: \"Ingrese la hora para la notificación periódica\",\n    hours: \"Horas\",\n    hoursPlaceholder: \"Seleccionar Horas\",\n    minutes: \"Minutos\",\n    minutesPlaceholder: \"Seleccionar minutos\",\n    save: \"Salvar\"\n  }\n};\n\nexport default spanish;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Components/TextProvider/hindi.ts",["260","261","262","263"],"const hindi = {\n  LanguagePicker: {\n    inputPlaceHolder: \"भाषा चुने\",\n    Heading: \"अपनी भाषा का चयन करें\",\n    inputAddon: \"भाषा\",\n    button: \"आगे बढ़ें\",\n  },\n  QuantityForm: {\n    buttonText: \"कार्ट में डालें\",\n    selectLabel: \"मात्रा\",\n  },\n  ProductDescriptionPage: {\n    descriptionHeader: \"आइटम के बारे में\",\n    buttonText: \"कार्ट में डालें\",\n    category: \"श्रेणी में\",\n  },\n  AuthPage: {\n    tagLine: \"आसान खरीदारी के लिए!\",\n  },\n  LoginForm: {\n    emailLabel: \"ईमेल\",\n    emailPlaceholder: \"ईमेल दर्ज करें\",\n    passwordLabel: \"कुंजिका\",\n    passwordPlaceholder: \"पास वर्ड दर्ज करें\",\n    loginButtonText: \"लॉग इन करें\",\n    forgotPassword: \"पासवर्ड भूल गए\",\n    signupButtonText: \"साइन अप करें\",\n    googleSignIn: \"दाखिल करना\",\n    userNotFound: \"कोई उपयोगकर्ता नहीं मिला\",\n    invalidPassword: \"अवैध पासवर्ड\",\n    noEmail: \"ईमेल जरुरी है!\",\n    validateEmail: \"कृपया एक मान्य ईमेल दर्ज करें!\",\n    noPassword: \"पासवर्ड की आवश्यकता है!\",\n  },\n  ForgotPasswordForm: {\n    emailLabel: \"ईमेल\",\n    emailPlaceholder: \"ईमेल दर्ज करें\",\n    emailErrorNotFound: \"उपयोगकर्ता नहीं मिला\",\n    emailSuccess: \"पासवर्ड रीसेट लिंक आपके मेल पर भेज दिया गया है।\",\n    submitButton: \"पासवर्ड रीसेट\",\n  },\n  SignUpForm: {\n    noEmail: \"ईमेल जरुरी है!\",\n    validateEmail: \"कृपया एक मान्य ईमेल दर्ज करें!\",\n    noPassword: \"पासवर्ड की आवश्यकता है!\",\n    validatePassword: \"पासवर्ड कम से कम 6 अंकों का होना चाहिए\",\n    noName: \"नाम आवश्यक है\",\n    namePlaceholder: \"नाम दर्ज\",\n    emailPlaceholder: \"ईमेल दर्ज करें\",\n    passwordPlaceholder: \"पास वर्ड दर्ज करें\",\n    nameLabel: \"नाम\",\n    emailLabel: \"ईमेल\",\n    passwordLabel: \"कुंजिका\",\n    passwordButtonTextShow: \"प्रदर्शन\",\n    passwordButtonTextHide: \"छिपाना\",\n    signupButtonText: \"साइन अप करें\",\n    loginButtonText: \"लॉग इन करें\",\n  },\n  CartPage: {\n    noItems: \"कोई वस्तु नहीं!\",\n  },\n  CostBreakUp: {\n    breakupHeading: \"लागत ब्रेकअप\",\n    totalHeading: \"कुल\",\n    buyText: \"खरीदें\",\n  },\n  RewardsPage: {\n    message: \"खरीदने के लिए धन्यवाद! अपना इनाम देखने के लिए नीचे स्क्रैच दें!\",\n  },\n  ScratchComponent: {\n    nextTime: \"अगली बार किस्मत तुम्हारा साथ देगी!\",\n    winMessage: \"आप जीत गए हैं ${{}}\",\n    resetButton: \"रीसेट\",\n  },\n\n  CartProvider: {\n    toastError1: {\n      title: \"आइटम सीमा तक पहुंच गया\",\n      description: \"${{}} आइटम जोड़े गए। आप इस आइटम को अधिक नहीं जोड़ सकते\",\n    },\n    toastError2: {\n      title: \"कार्ट लिमिट पहुँच गया\",\n      description:\n        \"आप कार्ट में अधिक आइटम नहीं जोड़ सकते! कृपया चेकआउट करें या कार्ट साफ़ करें!\",\n    },\n    toastSuccess: {\n      title: \"${{}} कार्ट में जोड़ा गया\",\n    },\n    toastRemoveSuccess: {\n      title: \"${{}} आइटम को कार्ट से निकाला गया\",\n    },\n  },\n  Footer: {\n    changeLanguage: \"भाषा बदलें\",\n    login: \"लॉग इन करें\",\n    signup: \"साइन अप करें\",\n    notification: \"अधिसूचना परीक्षण\",\n  },\n  UserAvatar: {\n    changeLanguage: \"भाषा बदलें\",\n    signOut: \"प्रस्थान करें\",\n  },\n  NotFound: {\n    text: \"पृष्ठ नहीं मिला\",\n  },\n  NotificationPage: {\n    title: \"अधिसूचना शीर्षक\",\n    titlePlaceholder: \"अधिसूचना शीर्षक दर्ज करें\",\n    noTitle: \"शीर्षक आवश्यक है!\",\n    body: \"अधिसूचना निकाय\",\n    bodyPlaceholder: \"अधिसूचना निकाय दर्ज करें\",\n    noBody: \"अधिसूचना निकाय की आवश्यकता है!\",\n    longBody: \"अधिसूचना निकाय बहुत लंबा है\",\n    delay: \"अधिसूचना में देरी\",\n    submit: \"अधिसूचना भेजें\",\n  },\n  PeriodicNotification: {\n    title: \"आवधिक अधिसूचना के लिए समय दर्ज करें\",\n    hours: \"घंटे\",\n    hoursPlaceholder: \"घंटे का चयन करें\",\n    minutes: \"मिनट\",\n    minutesPlaceholder: \"मिनट चुनें\",\n    save: \"सहेजें\",\n  },\n};\n\nexport default hindi;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Components/TextProvider/english.ts",["264","265","266","267"],"const english = {\n  LanguagePicker: {\n    inputPlaceHolder: \"Select Language\",\n    Heading: \"Select your Language\",\n    inputAddon: \"Language\",\n    button: \"Proceed\",\n  },\n  QuantityForm: {\n    buttonText: \"Add to Cart\",\n    selectLabel: \"Quantity\",\n  },\n  ProductDescriptionPage: {\n    descriptionHeader: \"About this Item\",\n    buttonText: \"Add to Cart\",\n    category: \"In Category\",\n  },\n  AuthPage: {\n    tagLine: \"For Easy Shopping!\",\n  },\n  LoginForm: {\n    emailLabel: \"Email\",\n    emailPlaceholder: \"Enter Email\",\n    passwordLabel: \"Password\",\n    passwordPlaceholder: \"Enter Password\",\n    loginButtonText: \"Login\",\n    forgotPassword: \"Forgot Password\",\n    signupButtonText: \"Sign Up\",\n    googleSignIn: \"Sign In\",\n    userNotFound: \"No User found\",\n    invalidPassword: \"Invalid Password\",\n    noEmail: \"Email is required!\",\n    validateEmail: \"Please enter a valid Email!\",\n    noPassword: \"Password is required!\",\n  },\n  ForgotPasswordForm: {\n    emailLabel: \"Email\",\n    emailPlaceholder: \"Enter Email\",\n    emailErrorNotFound: \"User Not Found\",\n    emailSuccess: \"Password reset link has been sent to your mail.\",\n    submitButton: \"Reset Password\",\n  },\n  SignUpForm: {\n    noEmail: \"Email is required!\",\n    validateEmail: \"Please enter a valid Email!\",\n    noPassword: \"Password is required!\",\n    validatePassword: \"Password must be atleast 6 characters\",\n    noName: \"Name is required\",\n    namePlaceholder: \"Enter Name\",\n    emailPlaceholder: \"Enter Email\",\n    passwordPlaceholder: \"Enter Password\",\n    nameLabel: \"Name\",\n    emailLabel: \"Email\",\n    passwordLabel: \"Password\",\n    passwordButtonTextShow: \"Show\",\n    passwordButtonTextHide: \"Hide\",\n    signupButtonText: \"Sign Up\",\n    loginButtonText: \"Login\",\n  },\n  CartPage: {\n    noItems: \"No Items!\",\n  },\n  CostBreakUp: {\n    breakupHeading: \"Cost Breakup\",\n    totalHeading: \"Total\",\n    buyText: \"Buy\",\n  },\n  RewardsPage: {\n    message: \"Thank You for purchasing! Scratch below to see your reward!\",\n  },\n  ScratchComponent: {\n    nextTime: \"Better Luck Next Time!\",\n    winMessage: \"You have won ${{}}\",\n    resetButton: \"Reset\",\n  },\n\n  CartProvider: {\n    toastError1: {\n      title: \"Item Limit Reached\",\n      description: \"${{}} items added. You cannot add more of this item\",\n    },\n    toastError2: {\n      title: \"Cart Limit Reached\",\n      description:\n        \"You cannot add more items to the cart! Please checkout or clear the cart!\",\n    },\n    toastSuccess: {\n      title: \"${{}} Added To Cart\",\n    },\n    toastRemoveSuccess: {\n      title: \"${{}} Item Removed From Cart\",\n    },\n  },\n  Footer: {\n    changeLanguage: \"Change Language\",\n    login: \"Login\",\n    signup: \"Sign Up\",\n    notification: \"Notification Test\",\n  },\n  UserAvatar: {\n    changeLanguage: \"Change Language\",\n    signOut: \"Sign Out\",\n  },\n  NotFound: {\n    text: \"Page Not Found\",\n  },\n  NotificationPage: {\n    title: \"Notification Title\",\n    titlePlaceholder: \"Enter Notification Title\",\n    noTitle: \"Title is required!\",\n    body: \"Notification Body\",\n    bodyPlaceholder: \"Enter Notification Body\",\n    noBody: \"Notification Body is required!\",\n    longBody: \"Notification Body is too long\",\n    delay: \"Notification Delay\",\n    submit: \"Send Notification\"\n  },\n  PeriodicNotification: {\n    title: \"Enter Time For Periodic Notification\",\n    hours: \"Hours\",\n    hoursPlaceholder: \"Select Hours\",\n    minutes: \"Minutes\",\n    minutesPlaceholder: \"Select Minutes\",\n    save: \"Save\"\n  }\n};\n\nexport default english;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Components/TextProvider/french.ts",["268","269","270","271"],"const french = {\n  LanguagePicker: {\n    inputPlaceHolder: \"Choisir la langue\",\n    Heading: \"Choisissez votre langue\",\n    inputAddon: \"Langue\",\n    button: \"Procéder\",\n  },\n  QuantityForm: {\n    buttonText: \"Ajouter au chariot\",\n    selectLabel: \"Quantité\",\n  },\n  ProductDescriptionPage: {\n    descriptionHeader: \"À propos de cet article\",\n    buttonText: \"Ajouter au chariot\",\n    category: \"Dans la catégorie\",\n  },\n  AuthPage: {\n    tagLine: \"Pour des achats faciles!\",\n  },\n  LoginForm: {\n    emailLabel: \"Email\",\n    emailPlaceholder: \"Entrez votre e-mail\",\n    passwordLabel: \"Mot de passe\",\n    passwordPlaceholder: \"Entrer le mot de passe\",\n    loginButtonText: \"S'identifier\",\n    forgotPassword: \"Mot de passe oublié\",\n    signupButtonText: \"Signer\",\n    googleSignIn: \"Se connecter\",\n    userNotFound: \"Aucun utilisateur trouvé\",\n    invalidPassword: \"Mot de passe incorrect\",\n    noEmail: \"Un e-mail est requis!\",\n    validateEmail: \"Veuillez saisir un e-mail valide!\",\n    noPassword: \"Mot de passe requis!\",\n  },\n  ForgotPasswordForm: {\n    emailLabel: \"Email\",\n    emailPlaceholder: \"Entrez votre e-mail\",\n    emailErrorNotFound: \"Utilisateur non trouvé\",\n    emailSuccess:\n      \"Le lien de réinitialisation du mot de passe a été envoyé à votre messagerie.\",\n    submitButton: \"Réinitialiser le mot de passe\",\n  },\n  SignUpForm: {\n    noEmail: \"Un e-mail est requis!\",\n    validateEmail: \"Veuillez saisir un e-mail valide!\",\n    noPassword: \"Mot de passe requis!\",\n    validatePassword: \"Le mot de passe doit être au moins de 6 caractères\",\n    noName: \"Le nom est requis\",\n    namePlaceholder: \"Entrez le nom\",\n    emailPlaceholder: \"Entrez votre e-mail\",\n    passwordPlaceholder: \"Entrer le mot de passe\",\n    nameLabel: \"Nom\",\n    emailLabel: \"Email\",\n    passwordLabel: \"Mot de passe\",\n    passwordButtonTextShow: \"Montrer\",\n    passwordButtonTextHide: \"Cacher\",\n    signupButtonText: \"Signer\",\n    loginButtonText: \"S'identifier\",\n  },\n  CartPage: {\n    noItems: \"Pas d'objet!\",\n  },\n  CostBreakUp: {\n    breakupHeading: \"Rupture des coûts\",\n    totalHeading: \"Total\",\n    buyText: \"Acheter\",\n  },\n  RewardsPage: {\n    message:\n      \"Merci d'avoir acheté! Grattez ci-dessous pour voir votre récompense!\",\n  },\n  ScratchComponent: {\n    nextTime: \"Plus de chance la prochaine fois!\",\n    winMessage: \"Vous avez gagné ${{}} \",\n    resetButton: \"Réinitialiser\",\n  },\n\n  CartProvider: {\n    toastError1: {\n      title: \"Limite d'objets atteinte\",\n      description:\n        \"Éléments ${{}} ajoutés. Vous ne pouvez pas en ajouter d'autres\",\n    },\n    toastError2: {\n      title: \"Limite du panier atteinte\",\n      description:\n        \"Vous ne pouvez pas ajouter plus d'articles au panier! Veuillez commander ou effacer le panier!\",\n    },\n    toastSuccess: {\n      title: \"${{}} ajoutés au panier\",\n    },\n    toastRemoveSuccess: {\n      title: \"${{}} Article retiré du panier\",\n    },\n  },\n  Footer: {\n    changeLanguage: \"Changer de langue\",\n    login: \"S'identifier\",\n    signup: \"Signer\",\n    notification: \"Test de notification\",\n  },\n  UserAvatar: {\n    changeLanguage: \"Changer de langue\",\n    signOut: \"Se déconnecter\",\n  },\n  NotFound: {\n    text: \"Page non trouvée\",\n  },\n  NotificationPage: {\n    title: \"Titre de la notification\",\n    titlePlaceholder: \"Entrez le titre de la notification\",\n    noTitle: \"Le titre est requis!\",\n    body: \"Corps de notification\",\n    bodyPlaceholder: \"Entrez le corps de la notification\",\n    noBody: \"Le corps de notification est requis!\",\n    longBody: \"Le corps de la notification est trop long\",\n    delay: \"Délai de notification\",\n    submit: \"Envoyer une notification\"\n  },\n  PeriodicNotification: {\n    title: \"Entrez l'heure de la notification périodique\",\n    hours: \"Heures\",\n    hoursPlaceholder: \"Sélectionnez les heures\",\n    minutes: \"Minutes\",\n    minutesPlaceholder: \"Sélectionnez les minutes\",\n    save: \"Sauver\"\n  }\n};\n\nexport default french;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Utils/pouch.db.functions.ts",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Utils/firebase.ts",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Utils/fetchLocale.ts",["272","273","274"],"import axiosClient from \"./axios.client\";\n\nexport const fetchIP = async () => {\n  try {\n    const res = await axiosClient.get(\"https://edns.ip-api.com/json\");\n    const data = res.data;\n    if (data.edns) {\n      return data.edns.ip;\n    } else if (data.dns) {\n      console.log({ ip: data.dns.ip });\n      return data.dns.ip;\n    } else {\n      throw { message: \"invalid response type\", data };\n    }\n    // console.log({ data });\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const fetchOthers = async (ip: string) => {\n  try {\n    const res = await axiosClient.post(\"https://api.trexeego.com/post/ip\", {\n      ip,\n    });\n\n    const data = res.data;\n\n    if (data.status === \"success\") {\n      return data;\n    } else {\n      throw { message: \"invalid response\", data };\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const fetchExchangeRates = async (to: string) => {\n  try {\n    const res = await axiosClient(\n      \"https://api.ratesapi.io/api/latest?base=USD&symbols=\" + to\n    );\n    const data = res.data;\n    if (data.error) {\n      throw { message: \"Invalid Response\", data };\n    } else {\n      return data.rates[to];\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n","/Users/zeeshan/Work/ecommerce-xyz/src/Utils/axios.client.ts",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Utils/deferred.ts",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/Header/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/Footer/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/PrivateRoute/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/LanguageEnforcer/index.tsx",["275"],"import React from \"react\";\nimport { Redirect, Route, RouteProps, RouterProps } from \"react-router-dom\";\nimport { LanguageContext } from \"../LanguageProvider\";\n\nconst LanguageEnforcedRoute = ({ children, ...rest }: RouteProps) => {\n  const currentLanguage = React.useContext(LanguageContext);\n  console.log({ currentLanguage });\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        currentLanguage.id > -1 ? children : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nexport default LanguageEnforcedRoute;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/LanguageSelection/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Pages/AuthPage/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Pages/HomePage/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/ScrollToTop/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Pages/NotificationPage/index.tsx",["276","277","278","279"],"import {\n  Box,\n  Button,\n  Checkbox,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Heading,\n  Input,\n  Switch,\n  Textarea,\n} from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\nimport React from \"react\";\nimport { DB } from \"../../Utils/firebase\";\nimport { AuthContext } from \"../../Components/AuthProvider\";\nimport PeriodicNotification from \"../../Components/PeriodicNotification\";\nimport { TextContext } from \"../../Components/TextProvider\";\n\nconst NotificationPage = () => {\n  const { register, handleSubmit, errors, setError } = useForm();\n  const { user } = React.useContext(AuthContext);\n  const text = React.useContext(TextContext);\n\n  const onFormSubmit = (data: any) => {\n    console.log({ data });\n\n    DB.collection(\"messages\").doc(user?.uid).set({\n      title: data.title,\n      description: data.body,\n      delay: data.delay,\n    });\n  };\n\n  const validateTitle = (title: string) => {\n    const trimmed = title.trim();\n    if (!trimmed) {\n      return text.NotificationPage.noTitle;\n    }\n    return true;\n  };\n\n  const validateBody = (body: string) => {\n    const trimmed = body.trim();\n\n    if (!trimmed) {\n      return text.NotificationPage.noBody;\n    } else if (trimmed.length > 100) {\n      return text.NotificationPage.longBody;\n    } else {\n      return true;\n    }\n  };\n\n  return (\n    <Flex direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\n      <form onSubmit={handleSubmit(onFormSubmit)}>\n        <FormControl isRequired isInvalid={errors.title}>\n          <FormLabel htmlFor=\"title\">{text.NotificationPage.title}</FormLabel>\n          <Input\n            width=\"100%\"\n            minWidth=\"20em\"\n            name=\"title\"\n            type=\"text\"\n            placeholder={text.NotificationPage.titlePlaceholder}\n            ref={register({ validate: validateTitle })}\n          />\n          <FormErrorMessage>\n            {errors.title && errors.title.message}\n          </FormErrorMessage>\n        </FormControl>\n\n        <FormControl isRequired isInvalid={errors.body}>\n          <FormLabel htmlFor=\"body\">{text.NotificationPage.body}</FormLabel>\n          <Textarea\n            name=\"body\"\n            placeholder={text.NotificationPage.bodyPlaceholder}\n            ref={register({ validate: validateBody })}\n            size=\"sm\"\n          />\n          <FormErrorMessage>\n            {errors.body && errors.body.message}\n          </FormErrorMessage>\n        </FormControl>\n\n        <FormControl>\n          <FormLabel htmlFor=\"delay\">{text.NotificationPage.delay}</FormLabel>\n          <Checkbox name=\"delay\" ref={register()} />\n        </FormControl>\n        <Button type=\"submit\">{text.NotificationPage.submit}</Button>\n      </form>\n\n      <PeriodicNotification />\n    </Flex>\n  );\n};\n\nexport default NotificationPage;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/NotFoundPage/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Pages/RewardsPage/index.tsx",["280","281"],"import { Box, Center, Grid, Heading } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { CartContext } from \"../../Components/CartProvider\";\nimport ScratchComponent from \"../../Components/ScratchComponent\";\nimport { TextContext } from \"../../Components/TextProvider\";\n\nconst RewardsPage = () => {\n  const { clearCart } = React.useContext(CartContext);\n  const text = React.useContext(TextContext)\n  React.useEffect(() => {\n    // effect\n    clearCart();\n  }, []);\n  return (\n    <Grid\n      templateAreas=\"'heading' 'canvas'\"\n      templateRows=\"100px auto\"\n    >\n      <Heading gridArea=\"heading\" textAlign=\"center\">\n        {text.RewardsPage.message}\n      </Heading>\n      <Center gridArea=\"canvas\">\n        <ScratchComponent />\n      </Center>\n      \n    </Grid>\n  );\n};\n\nexport default RewardsPage;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/CartPage/index.tsx",["282","283"],"import { Box, Flex, Grid, Heading, List, ListItem } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport CartPageRow from \"../../Components/CartPageRow\";\nimport { CartContext } from \"../../Components/CartProvider\";\nimport CostBreakUp from \"../../Components/CostBreakUp\";\nimport { LanguageContext } from \"../../Components/LanguageProvider\";\nimport { LocaleContext } from \"../../Components/LocaleProvider\";\nimport { TextContext } from \"../../Components/TextProvider\";\n\nconst CartPage = () => {\n  const { items, CartTotal, addToCart, removeFromCart } = React.useContext(\n    CartContext\n  );\n  const { label } = React.useContext(LanguageContext);\n  const { currencySymbol, exchangeRate } = React.useContext(LocaleContext);\n  const text = React.useContext(TextContext);\n  return (\n    <Grid\n      gridTemplateColumns={[\"3fr 1fr\", \"3fr 1fr\", \"4fr 1fr\"]}\n      height={items.length <= 1 ? \"100%\" : \"auto\"}\n    >\n      <Flex direction=\"column\" width=\"100%\">\n        {items.length === 0 ? (\n          <Box margin=\"2em 0\">\n            <Heading textAlign=\"center\">{text.CartPage.noItems}</Heading>\n          </Box>\n        ) : (\n          items.map((i, index) => {\n            return (\n              <CartPageRow\n                key={i.product.id}\n                product={i.product}\n                quantity={i.quantity}\n                index={index}\n                label={label}\n                currencySymbol={currencySymbol}\n                exchangeRate={exchangeRate}\n                addToCart={addToCart}\n                removeFromCart={removeFromCart}\n              />\n            );\n          })\n        )}\n      </Flex>\n      <Box background=\"gray.900\" height=\"100%\">\n        <CostBreakUp\n          products={items}\n          currencySymbol={currencySymbol}\n          exchangeRate={exchangeRate}\n          label={label}\n          total={CartTotal}\n        />\n      </Box>\n    </Grid>\n  );\n};\n\nexport default CartPage;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Components/CostBreakUp/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/CartPageRow/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/ScratchComponent/index.tsx",["284","285","286","287"],"import React from \"react\";\nimport scratchImage from \"../../Images/scratch.jpg\";\n// @ts-ignore\nimport ScratchCard from \"react-scratchcard\";\nimport { Box, Button, Center, Flex, Heading } from \"@chakra-ui/react\";\nimport { LocaleContext } from \"../LocaleProvider\";\nimport { TextContext } from \"../TextProvider\";\nimport SCard from \"../SCard\";\n\nimport NewScratchCard from \"../NewScratchCard\";\n\nconst ScratchComponent = () => {\n  const [load, setLoad] = React.useState(false);\n  const text = React.useContext(TextContext);\n\n  const settings = {\n    width: 300,\n    height: 300,\n    image: scratchImage,\n    background: \"gray.200\",\n    finishPercent: 40,\n    onComplete: () => console.log(\"The card is now clear!\"),\n  };\n\n  const number = Math.round(Math.random() * 1000);\n  console.log({ number });\n\n  const { exchangeRate, currencySymbol } = React.useContext(LocaleContext);\n  const handleReset = () => {\n    setLoad(true);\n    setTimeout(() => {\n      setLoad(false);\n    }, 100);\n  };\n\n  return (\n    <Flex direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\n      {load ? (\n        <></>\n      ) : (\n        <NewScratchCard {...settings}>\n          <Center height=\"300px\" width=\"300px\">\n            <Heading textAlign=\"center\" color=\"black\">\n              {number % 2 === 0 && number !== 0\n                ? text.ScratchComponent.winMessage.replace(\n                    \"${{}}\",\n                    `${currencySymbol}${\n                      Math.round(\n                        Math.round(Math.random() * 10) * exchangeRate\n                      ) | 10\n                    }`\n                  )\n                : text.ScratchComponent.nextTime}\n            </Heading>\n          </Center>\n        </NewScratchCard>\n      )}\n\n      <Button type=\"button\" m={5} onClick={handleReset}>\n        {text.ScratchComponent.resetButton}\n      </Button>\n    </Flex>\n  );\n};\n\nexport default ScratchComponent;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/FeedPage/index.tsx",["288"],"import { SimpleGrid } from \"@chakra-ui/react\";\nimport React, { useContext } from \"react\";\nimport { CartContext } from \"../../Components/CartProvider\";\nimport { FeedContext, Product } from \"../../Components/FeedProvider\";\nimport { LanguageContext } from \"../../Components/LanguageProvider\";\nimport { LocaleContext } from \"../../Components/LocaleProvider\";\nimport ProductCard from \"../../Components/ProductCard\";\n\ninterface Props {\n  homePageFeed: Product[];\n  label: string;\n  currencySymbol: string;\n  exchangeRate: number;\n}\n\nconst FeedPage = () => {\n  const { homePageFeed } = useContext(FeedContext);\n  const { label } = useContext(LanguageContext);\n  const { currencySymbol, exchangeRate } = useContext(LocaleContext);\n  const { addToCart } = useContext(CartContext);\n\n  return (\n    <SimpleGrid\n      spacing=\"40px\"\n      minChildWidth=\"300px\"\n      height=\"100%\"\n      // overflowY=\"auto\"\n    >\n      {homePageFeed.map((feed) => {\n        return (\n          <ProductCard\n            key={feed.id}\n            addToCart={addToCart}\n            feed={feed}\n            label={label}\n            rate={exchangeRate}\n            symbol={currencySymbol}\n          />\n        );\n      })}\n    </SimpleGrid>\n  );\n};\n\nexport default FeedPage;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Pages/ProductDescriptionPage/index.tsx",["289"],"import {\n  Box,\n  Text,\n  Image,\n  Flex,\n  SimpleGrid,\n  Heading,\n  Container,\n  Grid,\n  Button,\n} from \"@chakra-ui/react\";\nimport React, { useContext } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { FeedContext, Product } from \"../../Components/FeedProvider\";\nimport { LanguageContext } from \"../../Components/LanguageProvider\";\nimport { LocaleContext } from \"../../Components/LocaleProvider\";\nimport { TextContext } from \"../../Components/TextProvider\";\nimport { capitalize } from \"../../Utils/capitalize\";\nimport { getProductKey } from \"../../Utils/product.language\";\n\ninterface Params {\n  id: string;\n}\n\nconst ProductDescriptionPage = () => {\n  const { id } = useParams() as Params;\n  const { homePageFeed } = useContext(FeedContext);\n  const { label } = useContext(LanguageContext);\n  const { currencySymbol, exchangeRate } = useContext(LocaleContext);\n  const text = React.useContext(TextContext);\n  const feed = homePageFeed.filter((f: Product) => f.id === parseInt(id))[0];\n  if (!id || !feed) {\n    return <Redirect to=\"/404\" />;\n  } else {\n    const title = capitalize(feed[getProductKey(\"title\", label)] as string);\n    const description = feed[getProductKey(\"description\", label)] as string;\n    const category = capitalize(\n      feed[getProductKey(\"category\", label)] as string\n    );\n    const price = `${Math.round(feed.price * exchangeRate)}`;\n    return (\n      //   <Box height=\"100%\">\n      <SimpleGrid height=\"100%\" spacing=\"40px\" minChildWidth=\"225px\">\n        <Image\n          alignSelf=\"center\"\n          justifySelf=\"center\"\n          //   boxSize=\"250px\"\n          objectFit=\"cover\"\n          src={feed.image}\n          alt=\"product\"\n        />\n\n        <Grid templateRows=\"170px 4fr 5em\" overflowY=\"auto\">\n          <Flex textAlign=\"center\" direction=\"column\" alignItems=\"center\">\n            <Heading as=\"h4\" size=\"lg\">\n              {title}\n            </Heading>\n            <Text fontSize=\"sm\">{text.ProductDescriptionPage.category}</Text>\n            <Text fontSize=\"md\">{category}</Text>\n          </Flex>\n          <Flex direction=\"column\">\n            <Heading margin=\"1em 0.5em\" as=\"h4\" textAlign=\"left\" size=\"md\">\n              {text.ProductDescriptionPage.descriptionHeader}\n            </Heading>\n            <Container textAlign=\"justify\" size=\"md\">\n              {description}\n            </Container>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-around\">\n            <Flex>\n              <Text fontSize=\"sm\">{currencySymbol}</Text>\n              <Heading fontSize=\"lg\">{price}</Heading>\n            </Flex>\n            <Button>{text.ProductDescriptionPage.buttonText}</Button>\n          </Flex>\n        </Grid>\n      </SimpleGrid>\n      //   </Box>\n    );\n  }\n};\n\nexport default ProductDescriptionPage;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Components/SignUpForm/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/ForgotPasswordForm/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/LoginForm/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/CartAvatarComponent/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/UserAvatar/index.tsx",["290","291","292","293"],"import {\n  Avatar,\n  AvatarBadge,\n  Button,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  MenuList,\n  useBreakpointValue,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Auth } from \"../../Utils/firebase\";\nimport { TextContext } from \"../TextProvider\";\n\ninterface Props {\n  name?: string | null;\n  url?: string | null;\n}\n\nconst UserAvatar = (props: Props) => {\n  const text = React.useContext(TextContext);\n  const avatarSize = useBreakpointValue({\n    base: \"sm\",\n    xs: \"sm\",\n    sm: \"md\",\n    md: \"md\",\n  });\n\n  return (\n    <Menu>\n      <MenuButton>\n        <Avatar\n          cursor=\"pointer\"\n          src={props.url ? props.url : \"\"}\n          name={props.name ? props.name : \"\"}\n          size={avatarSize}\n        />\n      </MenuButton>\n      <MenuList>\n        <MenuItem>\n          <NavLink to=\"/change-language\">\n            {text.UserAvatar.changeLanguage}\n          </NavLink>\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            Auth.signOut();\n          }}\n        >\n          {text.UserAvatar.signOut}\n        </MenuItem>\n      </MenuList>\n    </Menu>\n  );\n};\n\nexport default UserAvatar;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Components/LanguagePicker/index.tsx",["294","295","296","297","298"],"import {\n  Box,\n  Button,\n  Grid,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  List,\n} from \"@chakra-ui/react\";\n\nimport React, { useEffect, useRef } from \"react\";\nimport LanguagePickerListItem from \"../LanguagePickerListItem\";\nimport query from \"../../Utils/fuse.service\";\nimport useComponentVisible from \"../useComponentVisible\";\nimport { LanguageContext } from \"../LanguageProvider\";\nimport { useHistory } from \"react-router-dom\";\nimport { TextContext } from \"../TextProvider\";\n\nexport interface Item {\n  id: number;\n  label: string;\n  translation: string;\n}\n\ninterface DropDownProps {\n  left: string;\n  top: string;\n  width: string;\n}\n\nconst textOnPage = {\n  inputPlaceHolder: \"Select Language\",\n  Heading: \"Select your Language\",\n  inputAddon: \"Language\",\n  button: \"Proceed\",\n};\n\nconst LanguagePicker = () => {\n  const languageSelected = React.useContext(LanguageContext);\n  const [searchText, setSearchText] = React.useState<string>(\n    languageSelected.label\n  );\n  const [selected, setSelected] = React.useState<boolean>(true);\n\n  const text = React.useContext(TextContext);\n  // console.log({searchText});\n\n  const {\n    ref,\n    isComponentVisible,\n    setIsComponentVisible,\n  } = useComponentVisible(false);\n\n  const InputAddonRef = React.useRef<HTMLDivElement>(null);\n  const history = useHistory();\n\n  const [data, setData] = React.useState<Item[]>(query(\"\"));\n  const [DropDownPos, setDropDownPos] = React.useState<DropDownProps>({\n    left: \"0px\",\n    top: \"0px\",\n    width: \"10px\",\n  });\n\n  const handleSelect = (id: number) => {\n    // languageSelected.setCurrentLanguage(data[id]);\n    setSearchText(data[id].label);\n    setIsComponentVisible(false);\n  };\n\n  useEffect(() => {\n    setSelected(\n      data.filter((d) => d.label === searchText || d.translation === searchText)\n        .length === 1\n        ? false\n        : true\n    );\n  }, [searchText, data]);\n\n  useEffect(() => {\n    resizeEvent();\n  }, [ref]);\n\n  const resizeEvent = () => {\n    if (InputAddonRef.current && ref.current) {\n      const top = InputAddonRef.current.clientHeight + \" px\";\n      const left = InputAddonRef.current.clientWidth + \"px\";\n      const width =\n        (ref.current as any).clientWidth -\n        InputAddonRef.current.clientWidth +\n        \"px\";\n      setDropDownPos({ top, left, width });\n    }\n  };\n\n  const proceedClicked = () => {\n    languageSelected.setCurrentLanguage(\n      data.filter(\n        (d) => d.label === searchText || d.translation === searchText\n      )[0]\n    );\n\n    history.replace(\"/home\");\n  };\n\n  useEffect(() => {\n    setSearchText(languageSelected.label);\n  }, [languageSelected]);\n\n  useEffect(() => {\n    // setSearchText(languageSelected.label);\n\n    window.addEventListener(\"resize\", resizeEvent);\n\n    return () => {\n      window.removeEventListener(\"resize\", resizeEvent);\n    };\n  }, []);\n\n  return (\n    <>\n      <Box bg=\"gray.600\" position=\"relative\" ref={ref} borderRadius=\"10px\">\n        <InputGroup>\n          <InputLeftAddon\n            ref={InputAddonRef}\n            fontWeight=\"600\"\n            children={text.LanguagePicker.inputAddon}\n          />\n          <Input\n            // autoFocus\n            onSelect={(e) => setIsComponentVisible(true)}\n            value={searchText}\n            borderBottomRadius={isComponentVisible ? \"0\" : \"5px\"}\n            bg=\"gray.800\"\n            onChange={(e) => {\n              setSearchText(e.target.value);\n              setData(query(e.target.value));\n            }}\n            type=\"text\"\n            placeholder={text.LanguagePicker.inputPlaceHolder}\n          />\n        </InputGroup>\n\n        {/* DropDown */}\n        {isComponentVisible && (\n          <List\n            position=\"absolute\"\n            left={DropDownPos.left}\n            width={DropDownPos.width}\n            top={DropDownPos.top}\n            zIndex=\"50\"\n            // overflow=\"auto\"\n          >\n            {data.map((ob, index) => (\n              <LanguagePickerListItem\n                onSelected={handleSelect}\n                key={\"languagelistitem_\" + index}\n                label={ob.label}\n                id={index}\n              />\n            ))}\n          </List>\n        )}\n      </Box>\n      <Button disabled={selected} margin=\"2em 0em\" onClick={proceedClicked}>\n        {text.LanguagePicker.button}\n      </Button>\n    </>\n  );\n};\n\nexport default LanguagePicker;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Utils/fuse.service.ts",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Utils/product.language.ts",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Utils/checkEmail.ts",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Utils/capitalize.ts",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/useComponentVisible/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/GoogleSignIn/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/LanguagePickerListItem/index.tsx",[],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/ProductCard/index.tsx",["299","300"],"import {\n  Box,\n  Heading,\n  Text,\n  Image,\n  Flex,\n  Grid,\n  Skeleton,\n  useImage,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { capitalize } from \"../../Utils/capitalize\";\nimport { getProductKey } from \"../../Utils/product.language\";\nimport { Product } from \"../FeedProvider\";\n\nimport ErrorImage from \"../../Images/not-found-image.jpg\";\nimport QuantityForm from \"../QuantiyForm\";\n\ninterface Props {\n  feed: Product;\n  label: string;\n  rate: number;\n  symbol: string;\n  addToCart: (product: Product, quantity: number, index: number) => void;\n}\n\nconst ProductCard = ({ feed, label, rate, symbol, addToCart }: Props) => {\n  const title = capitalize(feed[getProductKey(\"title\", label)] as string);\n  const category = capitalize(feed[getProductKey(\"category\", label)] as string);\n  const price = `${(feed.price * rate).toFixed(2)}`;\n  const history = useHistory();\n  const match = useRouteMatch();\n\n  const [Quantity, setQuantity] = React.useState(1);\n\n  const onImageLoad = () => {\n    // setImageLoaded(true);\n  };\n\n  const useImageHook = useImage({\n    src: feed.image,\n    onLoad: onImageLoad,\n    onError: onImageLoad,\n  });\n\n  const gotoDescription = () => {\n    history.push(`${match.url}/${feed.id}`);\n  };\n\n  const pushToCart = (quantity: number) => {\n    // console.log({ quantity, id: feed[\"id\"] });\n    addToCart(feed, quantity, feed[\"id\"]);\n  };\n\n  return (\n    <Box p={5} backgroundColor=\"gray.900\">\n      <Grid templateRows=\"120px 4fr 5em\">\n        <Flex\n          onClick={gotoDescription}\n          textAlign=\"center\"\n          direction=\"column\"\n          alignItems=\"center\"\n        >\n          <Heading as=\"h4\" size=\"sm\">\n            {title}\n          </Heading>\n          <Text fontSize=\"xs\">IN</Text>\n          <Text fontSize=\"sm\">{category}</Text>\n        </Flex>\n        {useImageHook === \"loaded\" ? (\n          <Image\n            onClick={gotoDescription}\n            alignSelf=\"center\"\n            justifySelf=\"center\"\n            boxSize=\"250px\"\n            objectFit=\"cover\"\n            src={feed.image}\n            alt=\"product\"\n          />\n        ) : useImageHook === \"loading\" ? (\n          <Skeleton alignSelf=\"center\" boxSize=\"250px\" justifySelf=\"center\" />\n        ) : (\n          <Image\n            onClick={gotoDescription}\n            alignSelf=\"center\"\n            justifySelf=\"center\"\n            boxSize=\"250px\"\n            objectFit=\"cover\"\n            src={ErrorImage}\n            alt=\"product\"\n          />\n        )}\n\n        <Grid\n          templateColumns=\"1fr 3fr\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Flex>\n            <Text fontSize=\"xs\">{symbol}</Text>\n            <Text fontSize=\"md\">{price}</Text>\n          </Flex>\n          <Box>\n            <QuantityForm handleAddToCart={pushToCart} />\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ProductCard;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Components/NewScratchCard/index.tsx",["301","302","303","304"],"import { Box } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport scratchImage from \"../../Images/scratch.jpg\";\n\ntype Coordinates = {\n  x: number;\n  y: number;\n};\n\ninterface Props {\n  background: string | number | (string & {}) | undefined;\n  image: string; // URL or base64 string;\n  height: number; //in px\n  width: number; //in px\n  finishPercent: number; // in %\n  onComplete: () => void; //callback when card has been scratched\n  children: React.ReactNode; // Bottom Layer\n}\n\nconst NewScratchCard = ({\n  background,\n  image,\n  height,\n  width,\n  finishPercent,\n  onComplete,\n  children,\n}: Props) => {\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(\n    null\n  );\n\n  const [CardScratched, setCardScratched] = React.useState(true);\n\n  React.useEffect(() => {\n    let mouseDown: boolean = false;\n    let start: Coordinates = { x: 0, y: 0 };\n    let end: Coordinates = { x: 0, y: 0 };\n    let canvasOffsetLeft: number = 0;\n    let canvasOffsetTop: number = 0;\n\n    const handleMouseDown = (evt: MouseEvent) => {\n      mouseDown = true;\n\n      start = {\n        x: evt.clientX - canvasOffsetLeft,\n        y: evt.clientY - canvasOffsetTop,\n      };\n\n      end = {\n        x: evt.clientX - canvasOffsetLeft,\n        y: evt.clientY - canvasOffsetTop,\n      };\n    };\n\n    const getFilledInPixels = (stride: number) => {\n      if (context) {\n        if (!stride || stride < 1) {\n          stride = 1;\n        }\n\n        const pixels = context.getImageData(0, 0, width, height);\n        const total = pixels.data.length / stride;\n        let count = 0;\n\n        for (let i = 0; i < pixels.data.length; i += stride) {\n          //@ts-ignore\n          if (parseInt(pixels.data[i], 10) === 0) {\n            count++;\n          }\n        }\n\n        return Math.round((count / total) * 100);\n      }\n    };\n\n    const getPosition = (e: MouseEvent) => {\n      if (canvasRef.current) {\n        const { top, left } = canvasRef.current.getBoundingClientRect();\n        const scrollTop =\n          window.pageYOffset || document.documentElement.scrollTop;\n        const scrollLeft =\n          window.pageXOffset || document.documentElement.scrollLeft;\n\n        return {\n          //   x: (e.pageX || e.touches[0].clientX) - left - scrollLeft,\n          //   y: (e.pageY || e.touches[0].clientY) - top - scrollTop,\n          x: e.pageX - left - scrollLeft,\n          y: e.pageY - top - scrollTop,\n        };\n      }\n    };\n\n    const handleMouseUp = (evt: MouseEvent) => {\n      mouseDown = false;\n    };\n\n    const handleMouseMove = (evt: MouseEvent) => {\n      if (mouseDown && context) {\n        start = {\n          x: end.x,\n          y: end.y,\n        };\n\n        end = getPosition(evt)!;\n        context.globalCompositeOperation = \"destination-out\";\n        // Draw our path\n        context.beginPath();\n        context.arc(end.x, end.y, 30, 0, 2 * Math.PI, false);\n        context.fill();\n        context.stroke();\n        context.closePath();\n\n        if (getFilledInPixels(32)! >= finishPercent) {\n          for (let j = 0; j < height; j += 20) {\n            for (let i = 0; i < width; i += 20) {\n              context.globalCompositeOperation = \"destination-out\";\n              // Draw our path\n              context.beginPath();\n              context.arc(i, j, 30, 0, 2 * Math.PI, false);\n              context.fill();\n              context.stroke();\n              context.closePath();\n            }\n          }\n          if (canvasRef.current) {\n            canvasRef.current.removeEventListener(\"mousedown\", handleMouseDown);\n            canvasRef.current.removeEventListener(\"mouseup\", handleMouseUp);\n            canvasRef.current.removeEventListener(\"mousemove\", handleMouseMove);\n            setContext(null);\n          }\n        }\n        // console.log({ filled: getFilledInPixels(32) });\n      }\n    };\n\n    if (canvasRef.current) {\n      const renderCtx = canvasRef.current.getContext(\"2d\");\n\n      if (renderCtx) {\n        canvasRef.current.addEventListener(\"mousedown\", handleMouseDown);\n        canvasRef.current.addEventListener(\"mouseup\", handleMouseUp);\n        canvasRef.current.addEventListener(\"mousemove\", handleMouseMove);\n\n        canvasOffsetLeft = canvasRef.current.offsetLeft;\n        canvasOffsetTop = canvasRef.current.offsetTop;\n\n        setContext(renderCtx);\n      }\n    }\n\n    // Draw a rectangle\n    // if (context) context.fillRect(5, 5, 100, 100);\n\n    // Draw a circle\n    if (context) {\n      const im = new Image();\n      im.crossOrigin = \"Anonymous\";\n      im.onload = () => {\n        context.drawImage(im, 0, 0);\n      };\n      im.src = scratchImage;\n    }\n\n    return () => {\n      if (canvasRef.current) {\n        canvasRef.current.removeEventListener(\"mousedown\", handleMouseDown);\n        canvasRef.current.removeEventListener(\"mouseup\", handleMouseUp);\n        canvasRef.current.removeEventListener(\"mousemove\", handleMouseMove);\n      }\n    };\n  }, [context]);\n\n  return (\n    <Box\n      width={width}\n      background={background}\n      height={height}\n      position=\"relative\"\n      userSelect=\"none\"\n    >\n      <canvas\n        width={width}\n        height={height}\n        style={{\n          position: \"absolute\",\n          top: 0,\n          zIndex: 9999,\n        }}\n        ref={canvasRef}\n      />\n\n      {/* Bottom Layer */}\n      <Box visibility={CardScratched ? \"visible\" : \"hidden\"}>{children}</Box>\n    </Box>\n    // <div\n    //   style={{\n    //     textAlign: \"center\",\n    //   }}\n    // >\n    //   <canvas\n    //     id=\"canvas\"\n    //     ref={canvasRef}\n    //     width={width}\n    //     height={width}\n    //     style={{\n    //       border: \"2px solid #000\",\n    //       marginTop: 10,\n    //     }}\n    //   ></canvas>\n    // </div>\n  );\n};\n\nexport default NewScratchCard;\n","/Users/zeeshan/Work/ecommerce-xyz/src/Components/QuantiyForm/index.tsx",[],["305","306"],"/Users/zeeshan/Work/ecommerce-xyz/src/Components/PeriodicNotification/index.tsx",["307","308","309"],"import {\n  Button,\n    Center,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Select,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { DB } from \"../../Utils/firebase\";\nimport { AuthContext } from \"../AuthProvider\";\nimport { TextContext } from \"../TextProvider\";\n\ninterface TimeModel {\n  hours: number;\n  minutes: number;\n}\n\nconst PeriodicNotification = () => {\n  const [Time, setTime] = React.useState<TimeModel>({ hours: 0, minutes: 0 });\n  const { register, handleSubmit, errors, setError } = useForm();\n  const [Loading, setLoading] = React.useState(true);\n  const { user } = React.useContext(AuthContext);\n  const text = React.useContext(TextContext);\n\n  const onFormSubmit = (data: any) => {\n    console.log({ data });\n    const offset = new Date().getTimezoneOffset();\n\n    DB.collection(\"periodic\").doc(user?.uid).set({\n      hours: data.hours,\n      minutes: data.minutes,\n      offset: offset,\n    });\n  };\n\n  React.useEffect(() => {\n    const listener = DB.collection(\"periodic\")\n      .doc(user?.uid)\n      .onSnapshot((doc) => {\n        const data = doc.data();\n\n        if (data) {\n          if (data.hours && data.minutes) {\n            setTime({\n              hours: data.hours,\n              minutes: data.minutes,\n            });\n            // setLoading(false);\n          }\n        }\n\n        setLoading(false);\n\n        console.log({ fetch: data });\n      });\n    return () => {\n      listener();\n    };\n  }, []);\n\n  return (\n    <Flex\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      margin=\"3em 0em\"\n    >\n      {Loading ? (\n        <Center height=\"300px\">\n          <Spinner\n            thickness=\"5px\"\n            speed=\"0.65s\"\n            emptyColor=\"gray.900\"\n            color=\"white\"\n            size=\"xl\"\n          />\n        </Center>\n      ) : (\n        <>\n          <Heading textAlign=\"center\" size=\"md\">\n            {text.PeriodicNotification.title}\n          </Heading>\n          <form onSubmit={handleSubmit(onFormSubmit)}>\n            <FormControl isRequired>\n              <FormLabel htmlFor=\"hours\">\n                {text.PeriodicNotification.hours}\n              </FormLabel>\n              <Select\n                width=\"100%\"\n                minWidth=\"20em\"\n                name=\"hours\"\n                defaultValue={Time.hours}\n                placeholder={text.PeriodicNotification.hoursPlaceholder}\n                ref={register()}\n              >\n                {new Array(24).fill(0).map((ig, index) => (\n                  <option key={`hours_${index}`} value={`${index}`}>\n                    {index}\n                  </option>\n                ))}\n              </Select>\n            </FormControl>\n\n            <FormControl isRequired>\n              <FormLabel htmlFor=\"minutes\">\n                {text.PeriodicNotification.minutes}\n              </FormLabel>\n              <Select\n                width=\"100%\"\n                minWidth=\"20em\"\n                name=\"minutes\"\n                defaultValue={Time.minutes}\n                placeholder={text.PeriodicNotification.minutesPlaceholder}\n                ref={register()}\n              >\n                {new Array(60).fill(0).map((ig, index) => (\n                  <option key={`minutes_${index}`} value={`${index}`}>\n                    {index}\n                  </option>\n                ))}\n              </Select>\n            </FormControl>\n            <Button m={3} type=\"submit\">\n              {text.PeriodicNotification.save}\n            </Button>\n          </form>\n        </>\n      )}\n    </Flex>\n  );\n};\n\nexport default PeriodicNotification;\n",{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","severity":1,"message":"315","line":1,"column":10,"nodeType":"316","messageId":"317","endLine":1,"endColumn":13},{"ruleId":"318","severity":1,"message":"319","line":72,"column":6,"nodeType":"320","endLine":72,"endColumn":17,"suggestions":"321"},{"ruleId":"322","severity":1,"message":"323","line":115,"column":19,"nodeType":"324","messageId":"325","endLine":115,"endColumn":26},{"ruleId":"322","severity":1,"message":"323","line":136,"column":15,"nodeType":"324","messageId":"325","endLine":136,"endColumn":22},{"ruleId":"322","severity":1,"message":"323","line":150,"column":13,"nodeType":"324","messageId":"325","endLine":150,"endColumn":20},{"ruleId":"322","severity":1,"message":"323","line":172,"column":15,"nodeType":"324","messageId":"325","endLine":172,"endColumn":22},{"ruleId":"322","severity":1,"message":"323","line":183,"column":15,"nodeType":"324","messageId":"325","endLine":183,"endColumn":22},{"ruleId":"314","severity":1,"message":"326","line":4,"column":10,"nodeType":"316","messageId":"317","endLine":4,"endColumn":25},{"ruleId":"318","severity":1,"message":"327","line":69,"column":6,"nodeType":"320","endLine":69,"endColumn":8,"suggestions":"328"},{"ruleId":"318","severity":1,"message":"329","line":102,"column":6,"nodeType":"320","endLine":102,"endColumn":8,"suggestions":"330"},{"ruleId":"318","severity":1,"message":"331","line":89,"column":6,"nodeType":"320","endLine":89,"endColumn":8,"suggestions":"332"},{"ruleId":"314","severity":1,"message":"315","line":1,"column":10,"nodeType":"316","messageId":"317","endLine":1,"endColumn":13},{"ruleId":"314","severity":1,"message":"333","line":1,"column":27,"nodeType":"316","messageId":"317","endLine":1,"endColumn":34},{"ruleId":"318","severity":1,"message":"334","line":24,"column":6,"nodeType":"320","endLine":24,"endColumn":8,"suggestions":"335"},{"ruleId":"322","severity":1,"message":"323","line":75,"column":17,"nodeType":"324","messageId":"325","endLine":75,"endColumn":35},{"ruleId":"322","severity":1,"message":"323","line":83,"column":9,"nodeType":"324","messageId":"325","endLine":83,"endColumn":75},{"ruleId":"322","severity":1,"message":"323","line":91,"column":14,"nodeType":"324","messageId":"325","endLine":91,"endColumn":42},{"ruleId":"322","severity":1,"message":"323","line":94,"column":14,"nodeType":"324","messageId":"325","endLine":94,"endColumn":52},{"ruleId":"322","severity":1,"message":"323","line":72,"column":17,"nodeType":"324","messageId":"325","endLine":72,"endColumn":38},{"ruleId":"322","severity":1,"message":"323","line":79,"column":20,"nodeType":"324","messageId":"325","endLine":79,"endColumn":76},{"ruleId":"322","severity":1,"message":"323","line":87,"column":14,"nodeType":"324","messageId":"325","endLine":87,"endColumn":41},{"ruleId":"322","severity":1,"message":"323","line":90,"column":14,"nodeType":"324","messageId":"325","endLine":90,"endColumn":49},{"ruleId":"322","severity":1,"message":"323","line":72,"column":17,"nodeType":"324","messageId":"325","endLine":72,"endColumn":37},{"ruleId":"322","severity":1,"message":"323","line":79,"column":20,"nodeType":"324","messageId":"325","endLine":79,"endColumn":73},{"ruleId":"322","severity":1,"message":"323","line":87,"column":14,"nodeType":"324","messageId":"325","endLine":87,"endColumn":35},{"ruleId":"322","severity":1,"message":"323","line":90,"column":14,"nodeType":"324","messageId":"325","endLine":90,"endColumn":44},{"ruleId":"322","severity":1,"message":"323","line":74,"column":17,"nodeType":"324","messageId":"325","endLine":74,"endColumn":41},{"ruleId":"322","severity":1,"message":"323","line":82,"column":9,"nodeType":"324","messageId":"325","endLine":82,"endColumn":73},{"ruleId":"322","severity":1,"message":"323","line":90,"column":14,"nodeType":"324","messageId":"325","endLine":90,"endColumn":39},{"ruleId":"322","severity":1,"message":"323","line":93,"column":14,"nodeType":"324","messageId":"325","endLine":93,"endColumn":46},{"ruleId":"336","severity":1,"message":"337","line":13,"column":7,"nodeType":"338","messageId":"339","endLine":13,"endColumn":56},{"ruleId":"336","severity":1,"message":"337","line":32,"column":7,"nodeType":"338","messageId":"339","endLine":32,"endColumn":51},{"ruleId":"336","severity":1,"message":"337","line":46,"column":7,"nodeType":"338","messageId":"339","endLine":46,"endColumn":51},{"ruleId":"314","severity":1,"message":"340","line":2,"column":39,"nodeType":"316","messageId":"317","endLine":2,"endColumn":50},{"ruleId":"314","severity":1,"message":"315","line":2,"column":3,"nodeType":"316","messageId":"317","endLine":2,"endColumn":6},{"ruleId":"314","severity":1,"message":"333","line":9,"column":3,"nodeType":"316","messageId":"317","endLine":9,"endColumn":10},{"ruleId":"314","severity":1,"message":"341","line":11,"column":3,"nodeType":"316","messageId":"317","endLine":11,"endColumn":9},{"ruleId":"314","severity":1,"message":"342","line":22,"column":43,"nodeType":"316","messageId":"317","endLine":22,"endColumn":51},{"ruleId":"314","severity":1,"message":"315","line":1,"column":10,"nodeType":"316","messageId":"317","endLine":1,"endColumn":13},{"ruleId":"318","severity":1,"message":"343","line":13,"column":6,"nodeType":"320","endLine":13,"endColumn":8,"suggestions":"344"},{"ruleId":"314","severity":1,"message":"345","line":1,"column":36,"nodeType":"316","messageId":"317","endLine":1,"endColumn":40},{"ruleId":"314","severity":1,"message":"346","line":1,"column":42,"nodeType":"316","messageId":"317","endLine":1,"endColumn":50},{"ruleId":"314","severity":1,"message":"347","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":19},{"ruleId":"314","severity":1,"message":"315","line":5,"column":10,"nodeType":"316","messageId":"317","endLine":5,"endColumn":13},{"ruleId":"314","severity":1,"message":"348","line":8,"column":8,"nodeType":"316","messageId":"317","endLine":8,"endColumn":13},{"ruleId":"322","severity":1,"message":"323","line":46,"column":21,"nodeType":"324","messageId":"325","endLine":46,"endColumn":28},{"ruleId":"314","severity":1,"message":"349","line":9,"column":11,"nodeType":"316","messageId":"317","endLine":9,"endColumn":16},{"ruleId":"314","severity":1,"message":"315","line":2,"column":3,"nodeType":"316","messageId":"317","endLine":2,"endColumn":6},{"ruleId":"314","severity":1,"message":"350","line":3,"column":3,"nodeType":"316","messageId":"317","endLine":3,"endColumn":14},{"ruleId":"314","severity":1,"message":"351","line":4,"column":3,"nodeType":"316","messageId":"317","endLine":4,"endColumn":9},{"ruleId":"314","severity":1,"message":"352","line":7,"column":3,"nodeType":"316","messageId":"317","endLine":7,"endColumn":14},{"ruleId":"314","severity":1,"message":"353","line":8,"column":3,"nodeType":"316","messageId":"317","endLine":8,"endColumn":12},{"ruleId":"314","severity":1,"message":"354","line":4,"column":3,"nodeType":"316","messageId":"317","endLine":4,"endColumn":7},{"ruleId":"314","severity":1,"message":"355","line":11,"column":28,"nodeType":"316","messageId":"317","endLine":11,"endColumn":34},{"ruleId":"314","severity":1,"message":"356","line":31,"column":7,"nodeType":"316","messageId":"317","endLine":31,"endColumn":17},{"ruleId":"318","severity":1,"message":"357","line":81,"column":6,"nodeType":"320","endLine":81,"endColumn":11,"suggestions":"358"},{"ruleId":"318","severity":1,"message":"357","line":117,"column":6,"nodeType":"320","endLine":117,"endColumn":8,"suggestions":"359"},{"ruleId":"314","severity":1,"message":"360","line":35,"column":10,"nodeType":"316","messageId":"317","endLine":35,"endColumn":18},{"ruleId":"314","severity":1,"message":"361","line":35,"column":20,"nodeType":"316","messageId":"317","endLine":35,"endColumn":31},{"ruleId":"314","severity":1,"message":"362","line":34,"column":25,"nodeType":"316","messageId":"317","endLine":34,"endColumn":41},{"ruleId":"314","severity":1,"message":"363","line":101,"column":9,"nodeType":"316","messageId":"317","endLine":101,"endColumn":14},{"ruleId":"318","severity":1,"message":"364","line":170,"column":19,"nodeType":"316","endLine":170,"endColumn":26},{"ruleId":"318","severity":1,"message":"365","line":173,"column":6,"nodeType":"320","endLine":173,"endColumn":15,"suggestions":"366"},{"ruleId":"310","replacedBy":"367"},{"ruleId":"312","replacedBy":"368"},{"ruleId":"314","severity":1,"message":"369","line":24,"column":35,"nodeType":"316","messageId":"317","endLine":24,"endColumn":41},{"ruleId":"314","severity":1,"message":"342","line":24,"column":43,"nodeType":"316","messageId":"317","endLine":24,"endColumn":51},{"ruleId":"318","severity":1,"message":"370","line":63,"column":6,"nodeType":"320","endLine":63,"endColumn":8,"suggestions":"371"},"no-native-reassign",["372"],"no-negated-in-lhs",["373"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'exchangeRate'. Either include it or remove the dependency array.","ArrayExpression",["374"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'LanguageContext' is defined but never used.","React Hook useEffect has a missing dependency: 'toast'. Either include it or remove the dependency array.",["375"],"React Hook React.useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["376"],"React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["377"],"'Heading' is defined but never used.","React Hook useEffect has missing dependencies: 'colorMode' and 'toggleColorMode'. Either include them or remove the dependency array.",["378"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'RouterProps' is defined but never used.","'Switch' is defined but never used.","'setError' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'clearCart'. Either include it or remove the dependency array.",["379"],"'List' is defined but never used.","'ListItem' is defined but never used.","'ScratchCard' is defined but never used.","'SCard' is defined but never used.","'Props' is defined but never used.","'AvatarBadge' is defined but never used.","'Button' is defined but never used.","'MenuDivider' is defined but never used.","'MenuGroup' is defined but never used.","'Grid' is defined but never used.","'useRef' is defined but never used.","'textOnPage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'resizeEvent'. Either include it or remove the dependency array.",["380"],["381"],"'Quantity' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","'setCardScratched' is assigned a value but never used.","'start' is assigned a value but never used.","The ref value 'canvasRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'canvasRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook React.useEffect has missing dependencies: 'finishPercent', 'height', and 'width'. Either include them or remove the dependency array.",["382"],["372"],["373"],"'errors' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'user?.uid'. Either include it or remove the dependency array.",["383"],"no-global-assign","no-unsafe-negation",{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"388","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},"Update the dependencies array to be: [CartItems, exchangeRate]",{"range":"403","text":"404"},"Update the dependencies array to be: [toast]",{"range":"405","text":"406"},"Update the dependencies array to be: [init]",{"range":"407","text":"408"},{"range":"409","text":"408"},"Update the dependencies array to be: [colorMode, toggleColorMode]",{"range":"410","text":"411"},"Update the dependencies array to be: [clearCart]",{"range":"412","text":"413"},"Update the dependencies array to be: [ref, resizeEvent]",{"range":"414","text":"415"},"Update the dependencies array to be: [resizeEvent]",{"range":"416","text":"417"},"Update the dependencies array to be: [context, finishPercent, height, width]",{"range":"418","text":"419"},"Update the dependencies array to be: [user?.uid]",{"range":"420","text":"421"},[2095,2106],"[CartItems, exchangeRate]",[1923,1925],"[toast]",[2475,2477],"[init]",[2365,2367],[974,976],"[colorMode, toggleColorMode]",[469,471],"[clearCart]",[1924,1929],"[ref, resizeEvent]",[2827,2829],"[resizeEvent]",[4994,5003],"[context, finishPercent, height, width]",[1500,1502],"[user?.uid]"]